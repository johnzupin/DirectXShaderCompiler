# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  configuration: Release

resources:
- repo: self

stages:
- stage: Build
  jobs:
  - job: Linux_clang8
    pool:
      vmImage: Ubuntu-18.04

    variables:
      CC: clang-8
      CXX: clang++-8

    steps:
    - bash: sudo apt-get install clang-8 libc++-8-dev libc++abi-8-dev lld-8 ninja-build python3
      displayName: 'Installing dependencies'
    - bash: git submodule update --init
      displayName: 'Updating submodules'
    - bash: |
        mkdir build
        cd build
        cmake -G Ninja .. $(cat ../utils/cmake-predefined-config-params) -DSPIRV_BUILD_TESTS=ON -DCMAKE_BUILD_TYPE=$(configuration)
      displayName: 'Cmake configuration'
    - bash: |
        cd build
        ninja
      displayName: 'Building'
    - bash: |
        ./build/bin/dxc -T ps_6_0 tools/clang/test/CodeGenSPIRV/passthru-ps.hlsl2spv
        ./build/bin/dxc -T ps_6_0 -Fo passthru-ps.dxil tools/clang/test/CodeGenSPIRV/passthru-ps.hlsl2spv
        ./build/bin/dxc -T ps_6_0 -Fo passthru-ps.spv tools/clang/test/CodeGenSPIRV/passthru-ps.hlsl2spv -spirv
      displayName: 'Smoke tests'
    - bash: ./build/bin/clang-spirv-tests --spirv-test-root tools/clang/test/CodeGenSPIRV/
      displayName: 'SPIRV tests'
    - bash: ./build/bin/clang-hlsl-tests --HlslDataDir $PWD/tools/clang/test/HLSL/
      displayName: 'DXIL tests'
